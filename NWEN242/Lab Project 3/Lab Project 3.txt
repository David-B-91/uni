Lab Project 3
4.1
	a)	 PC      = 00000000   EPC     = 00000000   Cause   = 00000000   BadVAddr= 00000000
		 Status  = 3000ff10   HI      = 00000000   LO      = 00000000
						 General Registers
		R0  (r0) = 00000000  R8  (t0) = 00000000  R16 (s0) = 00000000  R24 (t8) = 00000000
		R1  (at) = 00000000  R9  (t1) = 00000000  R17 (s1) = 00000000  R25 (t9) = 00000000
		R2  (v0) = 100004a0  R10 (t2) = 00000000  R18 (s2) = 00000000  R26 (k0) = 00000000
		R3  (v1) = 00000000  R11 (t3) = 00000000  R19 (s3) = 00000000  R27 (k1) = 00000000
		R4  (a0) = 00000000  R12 (t4) = 00000000  R20 (s4) = 00000000  R28 (gp) = 10008000
		R5  (a1) = 00000002  R13 (t5) = 00000000  R21 (s5) = 00000000  R29 (sp) = 7fffe8d0
		R6  (a2) = 0000000c  R14 (t6) = 00000000  R22 (s6) = 00000000  R30 (s8) = 00000000
		R7  (a3) = 00000000  R15 (t7) = 00000000  R23 (s7) = 00000000  R31 (ra) = 00000000

		 FIR    = 00009800    FCSR    = 00000000    FCCR   = 00000000   FEXR    = 00000000
		 FENR   = 00000000
		

4.1
	d)	 PC      = 00000000   EPC     = 00000000   Cause   = 00000000   BadVAddr= 00000000
		 Status  = 3000ff10   HI      = 00000000   LO      = 00000000
						 General Registers
		R0  (r0) = 00000000  R8  (t0) = 00000000  R16 (s0) = 00000000  R24 (t8) = 00000000
		R1  (at) = 00000000  R9  (t1) = 00000000  R17 (s1) = 00000000  R25 (t9) = 00000000
		R2  (v0) = 100004a0  R10 (t2) = 00000000  R18 (s2) = 00000000  R26 (k0) = 00000000
		R3  (v1) = 100004c0  R11 (t3) = 00000000  R19 (s3) = 00000000  R27 (k1) = 00000000
		R4  (a0) = 00000000  R12 (t4) = 00000000  R20 (s4) = 00000000  R28 (gp) = 10008000
		R5  (a1) = 00000002  R13 (t5) = 00000000  R21 (s5) = 00000000  R29 (sp) = 7fffe8d0
		R6  (a2) = 00000006  R14 (t6) = 00000000  R22 (s6) = 00000000  R30 (s8) = 00000000
		R7  (a3) = 00000004  R15 (t7) = 00000000  R23 (s7) = 00000000  R31 (ra) = 00000000

		 FIR    = 00009800    FCSR    = 00000000    FCCR   = 00000000   FEXR    = 00000000
		 FENR   = 00000000
			
		
		Each value from Array_A and Array_B are stored in each of the sets of the cache, 0 and 1 for Array_A,
		values 1 and 2. sets 2 and 3 for Array_B values 3 and 4. because the values are repeated, only 4 
		seperate values are stored. 
		
4.2
	a)	16B: Hit Rate: 0.75, because the only misses are compulsary ( the first time each of the array values are loaded).
		8B:  Hit Rate: 0.5, only misses are again compulsary however the arrays are now spread out twice as far. 
		4B: Hit Rate: 0, all misses are made because they are compulsary. each value gets its own spot in the cache.
		increasing the Block size seems to allow more data to be placed spaitalally in the cache. 
	b)	N=1: Hit Rate: 0.75. Misses: Compulsary: 4
		N=5: Hit Rate: 0.833333 Misses: Compulsary: 4
		N=10: Hit Rate: 0.882353 Misses: Compulsary: 4
		N=100: Hit Rate: 0.981308 Misses: Compulsary: 4
		having the data that is needed repeatedly, still available when each iteration is completed
		means that all subseqent loops shouldnt have any misses.
		
4.3
	a)	set 0 data cache contents: 00000040 00000041 00000042 00000043
		these are the values of bytes 128,129,130,131. the program needs 512Bytes of data written, by the time the cache 
		is fully populated, these are the next 4 values to be stored
	

	b)	set0 data cache  contents: first write: way0 00000000 00000001 00000002 00000003
								   second write: way1 00000010 00000011 00000012 00000013
								   thrid write: way0 00000020 00000021 00000022 00000023
									forth write: way1 00000030 00000031 00000032 00000033
									fifth wirte: way0 00000040 00000041 00000042 00000043
									sixth writeL way1 00000050 00000051 00000052 00000053
									seveth wrtite: way0 00000060 00000061 00000062 00000063	
									eightth wrtie: way1 00000070 00000071 00000072 00000073
									
									
4.4
	b)	Stride 1: N: 1		Hit-Rate:0.75	Misses: Compulsary: 32
		Stride 1: N: 5
		Stride 1: N: 10
		Stride 1: N: 100
		Stride 2: N: 1
		Stride 2: N: 5
		Stride 2: N: 10
		Stride 2: N: 100
		Stride 4: N: 1
		Stride 4: N: 5
		Stride 4: N: 10
		Stride 4: N: 100
		Stride 8: N: 1
		Stride 8: N: 5
		Stride 8: N: 10
		Stride 8: N: 100
		Stride 16: N: 1
		Stride 16: N: 5
		Stride 16: N: 10
		Stride 16: N: 100
		Stride 32: N: 1
		Stride 32: N: 5
		Stride 32: N: 10
		Stride 32: N: 100
		Stride 64: N: 1
		Stride 64: N: 5
		Stride 64: N: 10
		Stride 64: N: 100
		
4.5
	a)	all configurations that result in a hit rate of 0.885714 are:
			16B Block size / Direct Map Mapping / LRU Replacement Algorithm
			16B Block size / Direct Map Mapping / FIFO Replacement Algorithm
			16B Block size / 2 Way Set-Associative Mapping / LRU Replacement Algorithm
			16B Block size / 2 Way Set-Associative Mapping / FIFO Replacement Algorithm
			16B Block size / 4 Way Set-Associative Mapping / LRU Replacement Algorithm
			16B Block size / 4 Way Set-Associative Mapping / FIFO Replacement Algorithm
			16B Block size / Fully Associative Mapping / LRU Replacement Algorithm
			16B Block size / Fully Associative Mapping / FIFO Replacement Algorithm
			
	b)	The only noticeable factor that changed what the hit rate was it Block Size. all other 
		settings made no difference.